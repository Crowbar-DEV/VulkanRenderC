vkCmdBindPipeline - Bind a pipeline object to a command buffer

C Specification
Once a pipeline has been created, it can be bound to the command buffer using the command:

void vkCmdBindPipeline(
    VkCommandBuffer                             commandBuffer,
    VkPipelineBindPoint                         pipelineBindPoint,
    VkPipeline                                  pipeline);
Parameters
commandBuffer is the command buffer that the pipeline will be bound to.

pipelineBindPoint is a VkPipelineBindPoint value specifying whether to bind to the compute or graphics bind point. Binding one does not disturb the other.

pipeline is the pipeline to be bound.

Description
Once bound, a pipeline binding affects subsequent graphics or compute commands in the command buffer until a different pipeline is bound to the bind point. The pipeline bound to VK_PIPELINE_BIND_POINT_COMPUTE controls the behavior of vkCmdDispatch and vkCmdDispatchIndirect. The pipeline bound to VK_PIPELINE_BIND_POINT_GRAPHICS controls the behavior of all drawing commands. The pipeline bound to VK_PIPELINE_BIND_POINT_RAY_TRACING_NV controls the behavior of vkCmdTraceRaysNV. No other commands are affected by the pipeline state.

Valid Usage
VUID-vkCmdBindPipeline-pipelineBindPoint-00777
If pipelineBindPoint is VK_PIPELINE_BIND_POINT_COMPUTE, the VkCommandPool that commandBuffer was allocated from must support compute operations

VUID-vkCmdBindPipeline-pipelineBindPoint-00778
If pipelineBindPoint is VK_PIPELINE_BIND_POINT_GRAPHICS, the VkCommandPool that commandBuffer was allocated from must support graphics operations

VUID-vkCmdBindPipeline-pipelineBindPoint-00779
If pipelineBindPoint is VK_PIPELINE_BIND_POINT_COMPUTE, pipeline must be a compute pipeline

VUID-vkCmdBindPipeline-pipelineBindPoint-00780
If pipelineBindPoint is VK_PIPELINE_BIND_POINT_GRAPHICS, pipeline must be a graphics pipeline

VUID-vkCmdBindPipeline-pipeline-00781
If the variable multisample rate feature is not supported, pipeline is a graphics pipeline, the current subpass has no attachments, and this is not the first call to this function with a graphics pipeline after transitioning to the current subpass, then the sample count specified by this pipeline must match that set in the previous pipeline

VUID-vkCmdBindPipeline-variableSampleLocations-01525
If VkPhysicalDeviceSampleLocationsPropertiesEXT::variableSampleLocations is VK_FALSE, and pipeline is a graphics pipeline created with a VkPipelineSampleLocationsStateCreateInfoEXT structure having its sampleLocationsEnable member set to VK_TRUE but without VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT enabled then the current render pass instance must have been begun by specifying a VkRenderPassSampleLocationsBeginInfoEXT structure whose pPostSubpassSampleLocations member contains an element with a subpassIndex matching the current subpass index and the sampleLocationsInfo member of that element must match the sampleLocationsInfo specified in VkPipelineSampleLocationsStateCreateInfoEXT when the pipeline was created

VUID-vkCmdBindPipeline-None-02323
This command must not be recorded when transform feedback is active

VUID-vkCmdBindPipeline-pipelineBindPoint-02391
If pipelineBindPoint is VK_PIPELINE_BIND_POINT_RAY_TRACING_NV, the VkCommandPool that commandBuffer was allocated from must support compute operations

VUID-vkCmdBindPipeline-pipelineBindPoint-02392
If pipelineBindPoint is VK_PIPELINE_BIND_POINT_RAY_TRACING_NV, the pipeline must be a ray tracing pipeline

Valid Usage (Implicit)
VUID-vkCmdBindPipeline-commandBuffer-parameter
commandBuffer must be a valid VkCommandBuffer handle

VUID-vkCmdBindPipeline-pipelineBindPoint-parameter
pipelineBindPoint must be a valid VkPipelineBindPoint value

VUID-vkCmdBindPipeline-pipeline-parameter
pipeline must be a valid VkPipeline handle

VUID-vkCmdBindPipeline-commandBuffer-recording
commandBuffer must be in the recording state

VUID-vkCmdBindPipeline-commandBuffer-cmdpool
The VkCommandPool that commandBuffer was allocated from must support graphics, or compute operations

VUID-vkCmdBindPipeline-commonparent
Both of commandBuffer, and pipeline must have been created, allocated, or retrieved from the same VkDevice

Host Synchronization
Host access to commandBuffer must be externally synchronized

Host access to the VkCommandPool that commandBuffer was allocated from must be externally synchronized

Command Properties
Command Buffer Levels	Render Pass Scope	Supported Queue Types	Pipeline Type
Primary
Secondary

Both

Graphics
Compute

See Also
